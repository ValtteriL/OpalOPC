using System.Text.Json;
using KnownVulnerabilityAPI.Services;
using Microsoft.AspNetCore.Mvc;

namespace KnownVulnerabilityAPI.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class VulnerabilityController(ILogger<VulnerabilityController> logger, ICPEService cpeService) : ControllerBase
    {
        [HttpPost]
        public ActionResult<CVEResult> Post(StrictBuildInfo buildInfo)
        {

            // TODO:
            logger.LogInformation("{msg}", $"Received buildinfo: {JsonSerializer.Serialize(buildInfo)}");

            // then figure out CPE <-- cache results https://learn.microsoft.com/en-us/aspnet/core/performance/caching/memory?view=aspnetcore-8.0

            try
            {
                string cpe = cpeService.constructCPEName(buildInfo);
                logger.LogInformation("{msg}", $"Constructed CPE: {cpe}");
            }
            catch (VendorNotFoundException e)
            {
                logger.LogError("{msg}", e.Message);
                return NotFound("Failed to find vendor name");
            }
            catch (ProductNotFoundException e)
            {
                logger.LogError("{msg}", e.Message);
                return NotFound("Failed to find product name");
            }


            // then get CVEs <-- cache results https://learn.microsoft.com/en-us/aspnet/core/performance/caching/memory?view=aspnetcore-8.0
            // then return CVEs
            return new CVEResult();
        }
    }
}
