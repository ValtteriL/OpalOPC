#!/usr/bin/perl

# Index all CVE data into a sqlite database
# Usage: index.pl <data-dir-path> <db-path>

use strict;
use warnings;

use File::Find;
use File::Basename;
use File::Slurp;
use Data::Dumper;
use JSON;
use DBI;
use File::Find;

my @cve_files = ();

sub GetCPEIds {
  # parse cpe ids from a CVE json into array

  my $json = shift;
  my %json = %{$json};
  my @cpe_ids = ();

  my $configurations = $json{'configurations'};

  foreach my $config (@$configurations) {
    foreach my $nodes (@$config{'nodes'}) {
      foreach my $node (@$nodes) {
          foreach my $matches (@$node{'cpeMatch'}) {
            foreach my $match (@$matches) {
              foreach my $criteria (@$match{'criteria'}) {
                push(@cpe_ids, ($criteria));
              }
            }
          }
      }
    }
  }

  return @cpe_ids;
}

sub wanted {
  # collect CVE files to @cve_files
  /^CVE-.*\.json/ and push(@cve_files, $File::Find::name);
}

my ($data_dir, $db_path) = @ARGV;
unless (defined $data_dir && defined $db_path) {
  die "Usage: $0 <data-dir-path> <db-path>\n";
}

# find all CVE files in the data directory
find(\&wanted, ($data_dir));


# delete the database if it already exists
unlink $db_path if -e $db_path;

# create a new database
my $dbh = DBI->connect("dbi:SQLite:uri=file:$db_path?mode=rwc");

# create cpe table
$dbh->do("
CREATE TABLE cpe (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  cpe TEXT UNIQUE
)
");

# create cve table
$dbh->do("
CREATE TABLE cve (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  cve TEXT UNIQUE,
  file BLOB
)
");

# create cve_cpe table
$dbh->do("
CREATE TABLE cpe_cves (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  cpe_id INTEGER,
  cve_id INTEGER,
  FOREIGN KEY(cpe_id) REFERENCES cpe(id),
  FOREIGN KEY(cve_id) REFERENCES cve(id)
)
");

$dbh->do('BEGIN TRANSACTION');

# process all cve files
foreach(@cve_files) {

  # parse a single json
  my $json_text = read_file($_);
  my $json = JSON->new->decode($json_text);
  my %json = %{$json};

  # get required properties
  my $cve_id = $json{'id'};
  my @cpe_ids = GetCPEIds($json);

  # insert into db
  # cve
  my $cve_sth = $dbh->prepare("INSERT INTO cve (cve, file) VALUES (?, ?)");
  $cve_sth->execute($cve_id, $json_text) or die $cve_sth->errstr;
  my $cve_db_id = $cve_sth->last_insert_id();

  # cpe
  my $cpe_sth = $dbh->prepare("INSERT INTO cpe (cpe) VALUES (?) on conflict do update set cpe = excluded.cpe");
  foreach my $cpe_id (@cpe_ids) {
    $cpe_sth->execute($cpe_id) or die $cpe_sth->errstr;

    my $cpe_db_id = $cpe_sth->last_insert_id();

    # cve_cpe
    my $cve_cpe_sth = $dbh->prepare("INSERT INTO cpe_cves (cpe_id, cve_id) VALUES (?, ?)");
    $cve_cpe_sth->execute($cpe_db_id, $cve_db_id) or die $cve_cpe_sth->errstr;
  }
}

$dbh->do('COMMIT');
