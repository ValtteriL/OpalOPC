using System.Text.RegularExpressions;

namespace KnownVulnerabilityAPI.Services
{
    public interface INameFormatterService
    {
        public string FormatName(string name);
    }
    public partial class NameFormatterService : INameFormatterService
    {
        public string FormatName(string name)
        {
            // convert all non-word characters to spaces
            name = MyRegex().Replace(name, " ");

            // convert multiple spaces to a single space
            name = MyRegex1().Replace(name, " ");

            // Look for long acronyms and filter out the last letter
            name = MyRegex2().Replace(name, "$1 $2");

            // Look for lower-case letters followed by upper-case letters
            name = MyRegex3().Replace(name, "$1 $2");

            // Look for lower-case letters followed by numbers
            name = MyRegex4().Replace(name, "$1 $2");

            // Remove any white space left around the word
            name = name.Trim();

            return name;
        }

        [GeneratedRegex(@"[^a-zA-Z\s\d]")]
        private static partial Regex MyRegex();
        [GeneratedRegex(@"\s+")]
        private static partial Regex MyRegex1();
        [GeneratedRegex(@"([A-Z]+)([A-Z][a-z])")]
        private static partial Regex MyRegex2();
        [GeneratedRegex(@"([a-z\d])([A-Z])")]
        private static partial Regex MyRegex3();
        [GeneratedRegex(@"([a-zA-Z])(\d)")]
        private static partial Regex MyRegex4();
    }
}
