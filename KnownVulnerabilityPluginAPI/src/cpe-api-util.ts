import { createFetchConfig } from './api-common'
import { type Env } from './index'

export interface CPEResult {
  resultsPerPage: number
  startIndex: number
  totalResults: number
  format: string
  version: string
  timestamp: string
  products: [
    {
      cpe: {
        deprecated: boolean
        cpeName: string
        cpeNameId: string
        lastModified: string
        created: string
        titles: [
          {
            title: string
            lang: string
          }
        ]

        refs: [
          {
            ref: string
            type: string
          }
        ]
        deprecatedBy: [
          {
            cpeName: string
            cpeNameId: string
          }
        ]
        deprecates: [
          {
            cpeName: string
            cpeNameId: string
          }
        ]
      }
    }
  ]
}

type PromiseRejection = never

const baseUri = 'https://services.nvd.nist.gov/rest/json/cpes/2.0'

export const getCPEDetails = async (
  query: string, env: Env
): Promise<CPEResult | PromiseRejection> =>
  await fetch(`${baseUri}?keywordSearch=${query}`, createFetchConfig(env))
    .then(async (response: Response): CPEResult => {
      if (!response.ok) {
        return await Promise.reject(response.statusText)
      }

      return await response.json()
    })
    .then((data: CPEResult) => data)
