import { createFetchConfig } from "./api-common";
import { constructCpeName } from "./cpe-name-util";
import { CVEResult, getCVEsForCPE } from "./cve-api-util";

export type BuildInfo = {
		productUri: string;
		manufacturerName: string;
		productName: string;
		softwareVersion: string;
		buildNumber: string;
		buildDate: Date;
};

export interface Env {
		API_KEY: string;
}

export default {
		async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {

				// parse the build info from the request body
				const buildInfo = await request.json().then((info: BuildInfo) => info);

				// construct the CPE name
				const cpe = constructCpeName(buildInfo, env);

				// fetch the CVE data for CPE
				const results = await getCVEsForCPE(cpe, env).then((cveResponse: CVEResult) => { return JSON.stringify(cveResponse) });

				// return the response
				return new Response(results, createFetchConfig(env));

		},
};
