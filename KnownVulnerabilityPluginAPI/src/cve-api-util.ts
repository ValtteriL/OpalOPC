import { createFetchConfig } from "./api-common";
import { Env } from "./index";

export type CVEResult = {
		resultsPerPage: number,
		startIndex: number,
		totalResults: number,
		format: string,
		version: string,
		timestamp: string,
		vulnerabilities: [
			{
						cve: {
							id: string,
							sourceIdentifier: string,
							published: string,
							lastModified: string,
							vulnStatus: string,
							cisaExploitAdd: string,
							cisaActionDue: string,
							cisaRequiredAction: string,
							cisaVulnerabilityName: string,
							descriptions: [
									{
											lang: string,
											value: string,
									},
							],
							metrics: {
									cvssMetricV2: [
											{
													source: string,
													type: string,
													cvssData: {
															version: number,
															vectorString: string,
															accessVector: string,
															accessComplexity: string,
															authentication: string,
															confidentialityImpact: string,
															integrityImpact: string,
															availabilityImpact: string,
															baseScore: number,
													},
													baseSeverity: string,
													exploitabilityScore: number
													impactScore: number,
													acInsufInfo: boolean,
													obtainAllPrivilege: boolean,
													obtainUserPrivilege: boolean,
													obtainOtherPrivilege: boolean,
													userInteractionRequired: boolean
											}
									]
							},
							weaknesses: [
									{
											"source": "nvd@nist.gov",
											"type": "Primary",
											"description": [
													{
															"lang": "en",
															"value": "CWE-20"
													}
											]
									}
							],
							"configurations": [
									{
											"nodes": [
													{
															"operator": "OR",
															"negate": false,
															"cpeMatch": [
																	{
																			"vulnerable": true,
																			"criteria": "cpe:2.3:o:microsoft:windows_10:-:*:*:*:*:*:*:*",
																			"matchCriteriaId": "21540673-614A-4D40-8BD7-3F07723803B0"
																	},
															]
													}
											]
									}
							],
							"references": [
									{
											"url": "http://blogs.technet.com/b/srd/archive/2013/12/10/ms13-098-update-to-enhance-the-security-of-authenticode.aspx",
											"source": "secure@microsoft.com",
											"tags": [
													"Vendor Advisory"
											]
									},
							]
				}
		],
		]
}

type PromiseRejection = never

const baseUri = "https://services.nvd.nist.gov/rest/json/cves/2.0"

export const getCVEsForCPE = (cpe: string, env: Env): Promise<CVEResult | PromiseRejection> =>
		fetch(`${baseUri}?cpeName=${cpe}`, createFetchConfig(env))
				.then(async (response: Response) => {
						if (!response.ok) {
								return Promise.reject(response.statusText)
						}

						return response.json()
				})
				.then((data: CVEResult) => data)
