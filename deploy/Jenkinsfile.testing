pipeline {
    agent {
        dockerfile {
            filename 'Dockerfile.agent'
            dir 'deploy'
            args '-u 0:0' // Force container to run as root
        }
    }

    environment {
        DOTNET_CLI_HOME = "/tmp/DOTNET_CLI_HOME"
        HOME = '/tmp'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Cleanup') {
            steps {
                sh 'rm -f opalopc-report-*'
            }
        }
        stage('Unit tests') {
            steps {
                sh 'make test'
            }
        }
        stage('End-to-end tests') {
            steps {
                sh 'make run-linux-mac-installer-test'
                sh 'make run-opcuaserver.com-demo'
                sh 'make run-opcuaserver.com-lds'
            }
        }
        stage('Test report schema') {
            steps {
                sh 'xmllint --noout --valid opalopc-report-*'
            }
        }
    }

    post {
        failure {
             mail \
                subject: "Failed Job: ${env.JOB_NAME} build ${env.BUILD_NUMBER}", \
                body: "Failed CI job -> <a href=\"${env.BUILD_URL}\">${env.JOB_NAME} build ${env.BUILD_NUMBER}</a>", \
                mimeType: 'text/html', \
                to: "valtteri@shufflingbytes.com";
        }
    }
}